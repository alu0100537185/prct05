GRADO EN INGENIERÍA INFORMÁTICA
LENGUAJES Y PARADIGMAS DE LA PROGRAMACIÓN
PRACTICA Nº5 VIRTUAL - PRUEBAS UNITARIAS
WALDO NAZCO TORRES

-----------------------------------------------------------------------

1) Clone el siguiente repositorio de 'github' y siga las instrucciones que se indican en el fichero 'README.md':

git@github.com:coromoto/PruebasUnitarias.git

2) En esta tarea escriba la respuesta a las siguientes preguntas:

   2.1.) ¿Cuál es el error en el código del método para calcular el máximo común divisor?

def gcd(u, v)
  u, v = u.abs, v.abs
  while v == 0 -----------> En esta condición se encuentra el error
    u, v = v, u % v
  end
  u
end

puts gcd(6,3)

La condición es erronea ya que intenta dividir un numero por un denominador cuyo valor es 0, esto falla ya que ningún número es divisible por 0, por lo tanto la condición correcta sería "while v != 0".

El código final quedaría así:

def gcd(u, v)
  u, v = u.abs, v.abs
  while v != 0
    u, v = v, u % v
  end
  u
end

puts gcd(6,3)


   2.2.) ¿Qué comandos del depurador utilizó para detectarlo? Describa la sesión de depuración.

A continuación detallaremos el proceso de detección del error detectado en el ejercicio anterior (sin corregir el archivo) utilizando el depurador de ruby.

Invocamos al depurador: $ruby -rdebug gcd.rb

Listamos las lineas del programa con: (rdb:1) l

gcd.rb:1:def gcd(u, v)
(rdb:1) l
[-4, 5] in gcd.rb
=> 1  def gcd(u, v)
   2    u, v = u.abs, v.abs
   3    while v == 0
   4      u, v = v, u % v
   5    end

El error como hemos comentado en el ejercicio anterior se producira en la linea nº3 (while v == 0). A continuación ponemos un breakpoint en la linea nº3:

(rdb:1) b 3
Set breakpoint 1 at gcd.rb:3

Continuaremos depurando el programa con el comando step para que vaya paso a paso, linea por linea:

[-2, 7] in gcd.rb
   1 def gcd(u, v)
   2 u, v = u.abs, v.abs
=> 3 while v == 0
   4 u, v = v, u % v
   5 end
   6 u
   7 end

 Al llegar a la linea 3 donde detectamos el error, he podido comprobar que la condición no llega en ningún momento a evaluarse ya que la condición (while == 0) no es posible que se produzca ya que ningún número es divisible por 0. A continuación se observa que damos un salto directo hacia la linea 6:

(rdb:1) s
gcd.rb:6: u

(rdb:1) l
[1, 10] in gcd.rb
   1 def gcd(u, v)
   2 u, v = u.abs, v.abs
   3 while v == 0
   4 u, v = v, u % v
   5 end
=> 6 u
   7 end
   8
   9 puts gcd(6,3)

La solución al error como ya comentamos en el ejercicio anterior, tendriamos que cambiar la condición (while == 0) por (while != 0) y ya entonces funcionaría correctamente.

   2.3.) Escriba la dirección 'HTTP' del repositorio que contiene el desarrollo de su práctica.

https://github.com/alu0100537185/prct05
